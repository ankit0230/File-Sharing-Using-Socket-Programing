

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.SocketException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.apache.commons.compress.utils.IOUtils;
import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPFile;
import org.apache.commons.net.ftp.FTPSClient;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ankit
 */
public class Download extends javax.swing.JFrame {
        String sd ;
    
        
        public Download() throws IOException {
        initComponents();
        
            setTitle("Download Wizard");
            
        FTPSClient ftpClient = new FTPSClient(false);
   
         ftpClient.connect("ftp.ankitgajbhiye.com", 21);
   boolean login = ftpClient.login("ankit.gajbhiye@ankitgajbhiye.com", "password");  
            System.out.println("value of login" + login);
   if (login) {  
    System.out.println("Connection established...");  
    //FTPFile[] files = ftpClient.listFiles("/upload/");
            
          
          //fos = new FileOutputStream("E:/abcd.txt"); 
          //System.out.println("abcd created");
           //boolean downld = ftpClient.retrieveFile("/upload/abc.txt",fos);
           ftpClient.setFileType(FTP.BINARY_FILE_TYPE);
    ftpClient.enterLocalPassiveMode();
    ftpClient.setAutodetectUTF8(true);
    
    String s = null;
    DefaultListModel model = new DefaultListModel();
              FTPFile[]  ftpFiles = ftpClient.listFiles("/upload/");
                      for (FTPFile ftpFile : ftpFiles) {
                s = ftpFile.getName();
          
                                     
                
                           model.addElement(s);
            }
                      jList2.setModel(model);
                      

   }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("File Download ");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel1);
        jLabel1.setBounds(66, 11, 600, 50);

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(51, 386, 95, 41);

        jButton2.setText("Log Out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(329, 386, 94, 41);

        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(592, 386, 95, 41);

        jButton4.setText("Download");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(400, 250, 160, 41);

        jList2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jScrollPane1.setViewportView(jList2);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(70, 120, 223, 250);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 255, 51));
        jLabel4.setText("Please select a file and click Download ");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(240, 80, 260, 22);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 255, 51));
        jLabel6.setText("Files on server:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(70, 100, 160, 17);

        jButton5.setText("Open");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(400, 170, 162, 41);

        jSeparator1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(40, 70, 650, 310);

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Ankit\\Desktop\\361841347_640.jpg")); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 720, 450);

        setSize(new java.awt.Dimension(736, 488));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            
        Selection s1 = new Selection();
           
            s1.setVisible(true);
             
           dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         Logon L1 = new Logon();
           
            L1.setVisible(true);
             
           dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        

            FTPSClient ftpClient = new FTPSClient(false);
  try {  
   
 
      // Connect to host
      ftpClient.connect("ftp.p9.webhosting.yahoo.com", 21);
   boolean login = ftpClient.login("ankit.gajbhiye@ankitgajbhiye.com", "password");  
       
   if (login) {  
    System.out.println("Connection established...");  
    //FTPFile[] files = ftpClient.listFiles("/upload/");
            
          
          //fos = new FileOutputStream("E:/abcd.txt"); 
          //System.out.println("abcd created");
           //boolean downld = ftpClient.retrieveFile("/upload/abc.txt",fos);
           ftpClient.setFileType(FTP.BINARY_FILE_TYPE);
    ftpClient.enterLocalPassiveMode();
    ftpClient.setAutodetectUTF8(true);
    
            List s = jList2.getSelectedValuesList();
            
          String strarray;
          strarray = s.toString();
       
       int l = strarray.length();
       
        sd = strarray.substring(1, l-1);
       
    
    //Create an InputStream to the File Data and use FileOutputStream to write it
    InputStream inputStream = ftpClient.retrieveFileStream("/upload/" + sd);
     
    FileOutputStream fileOutputStream = new FileOutputStream("E:/"+ sd);

         
   
     
    //Using org.apache.commons.io.IOUtils
    IOUtils.copy(inputStream, fileOutputStream);
    fileOutputStream.flush();
    //IOUtils.closeQuietly(fileOutputStream);
    //IOUtils.closeQuietly(inputStream);
    boolean commandOK = ftpClient.completePendingCommand();

   } else {  
     JOptionPane.showMessageDialog(this, "Connection Failed !!!");
   }  
  
  } catch (SocketException e) {  
   e.printStackTrace();  
   JOptionPane.showMessageDialog(this, "Invalid filename!! Please re-enter filename");
  } catch (IOException e) {  
   e.printStackTrace();  
   JOptionPane.showMessageDialog(this, "Invalid filename!! Please re-enter filename");
  } finally {  
   try {  
    ftpClient.disconnect();  
   } catch (IOException e) {  
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Invalid filename!! Please re-enter filename");
            }
  }
  
            JOptionPane.showMessageDialog(this, "You have successfully downloaded " + "'" + sd + "'" + " ! Please check in Downloads");
        
    //jLabel3.setText("You have successfully downloaded " + "'" + filename + "'" + " ! Please check in Downloads");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        List s = jList2.getSelectedValuesList();
            
          String strarray;
          strarray = s.toString();
       
       int l = strarray.length();
       
        sd = strarray.substring(1, l-1);
         String url = "http://ankitgajbhiye.com/upload/" + sd;
        try {
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        } catch (IOException ex) {
            Logger.getLogger(Logon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Download.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new Download().setVisible(true);
                } catch (IOException ex) {
                    System.out.println("Errorororooror");
                }
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
